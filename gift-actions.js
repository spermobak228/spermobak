/**
 * –ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–¥–∞—Ä–∫–∞–º–∏
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏ –≤—ã–∏–≥—Ä—ã—à–∞ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥–∞—Ä–∫–æ–≤
 */

import { formatGiftPrice } from './ui-utils.js';
import { showConfirmDialog, createSellButtonText } from './confirm-modal.js';
import * as i18n from './i18n.js';
import { showSuccess, showError, showWarning, showDailyLimitReached, setModalState } from './notifications.js';

/**
 * –ü–æ–ª—É—á–∞–µ—Ç initData –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram WebApp
 * @returns {string} initData –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
 */
function getTelegramInitData() {
    return window.Telegram?.WebApp?.initData || '';
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å Telegram initData –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
 */
function createTelegramHeaders() {
    const headers = {
        'Content-Type': 'application/json'
    };
    
    const initData = getTelegramInitData();
    if (initData) {
        headers['X-Telegram-Init-Data'] = initData;
    }
    
    return headers;
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —é–∑–µ—Ä–Ω–µ–π–º–∞
 * @param {Function} onClose - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞
 * @returns {HTMLElement} - –°–æ–∑–¥–∞–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
 */
export function showUsernameRequiredDialog(onClose) {
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –º–æ–¥—É–ª—å notifications, —á—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setModalState(true);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –¥–∏–∞–ª–æ–≥
    let usernameDialog = document.getElementById('usernameRequiredDialog');
    if (usernameDialog) {
        // –ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
        usernameDialog.remove();
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
    usernameDialog = document.createElement('div');
    usernameDialog.id = 'usernameRequiredDialog';
    usernameDialog.className = 'win-modal confirmation-dialog';
    
    // –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏–∞–ª–æ–≥–∞
    usernameDialog.innerHTML = `
        <h2>${i18n.t('gifts.username_required')}</h2>
        <p class="confirmation-message">
            ‚ö†Ô∏è ${i18n.t('gifts.username_required_explanation')}
            <br>
            ${i18n.t('gifts.exclusive_fragment_requirement')}
        </p>
        <div class="win-actions confirmation-actions">
            <button class="action-button confirm-button">${i18n.t('common.understand')}</button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!document.getElementById('username-dialog-styles')) {
        const styleElement = document.createElement('style');
        styleElement.id = 'username-dialog-styles';
        styleElement.textContent = `
            #usernameRequiredDialog .confirmation-message {
                margin-bottom: 20px;
                line-height: 1.5;
                color: var(--tg-theme-text-color, #000000);
                text-align: center;
                max-width: 340px;
                width: 100%;
            }
            #usernameRequiredDialog .action-button {
                background-color: var(--tg-theme-button-color, #2196F3);
                color: var(--tg-theme-button-text-color, white);
                font-weight: bold;
                height: 50px;
                line-height: 46px;
                font-size: 16px;
                padding: 0 15px;
            }
            #usernameRequiredDialog.confirmation-dialog {
                padding: 20px;
            }
        `;
        document.head.appendChild(styleElement);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–∞–ª–æ–≥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.body.appendChild(usernameDialog);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É
    const confirmButton = usernameDialog.querySelector('.confirm-button');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
    if (confirmButton) {
        confirmButton.addEventListener('click', function() {
            if (typeof onClose === 'function') {
                onClose();
            }
            usernameDialog.classList.remove('show');
            setTimeout(() => {
                usernameDialog.remove();
            }, 300);
        });
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    usernameDialog.classList.add('show');
    
    return usernameDialog;
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–¥–∞—Ä–∫–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
 * @param {Object} gift - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–¥–∞—Ä–∫–∞
 * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞
 */
export function displayGiftAnimation(gift, container) {
    if (!container) return;
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container.innerHTML = '';
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–¥–∞—Ä–∫–∞, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
    const animationPath = gift.animation_path || gift.animation;
    
    if (animationPath) {
        if (animationPath.endsWith('.tgs')) {
            try {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ tgs-player
                if (customElements.get('tgs-player')) {
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º tgs-player –¥–ª—è TGS –∞–Ω–∏–º–∞—Ü–∏–π
                    const tgsPlayer = document.createElement('tgs-player');
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ '/dev' –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                    const isDevMode = window.isDevMode || window.location.pathname.includes('/dev/');
                    const apiPrefix = isDevMode && !animationPath.startsWith('/dev') ? '/dev' : '';
                    tgsPlayer.setAttribute('src', apiPrefix + animationPath);
                    tgsPlayer.setAttribute('autoplay', 'true');
                    container.appendChild(tgsPlayer);
                } else {
                    // –ï—Å–ª–∏ tgs-player –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ–¥–∑–∏
                    container.innerHTML = `<div class="gift-emoji">${gift.emoji || 'üéÅ'}</div>`;
                }
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ TGS –∞–Ω–∏–º–∞—Ü–∏–∏:', e);
                container.innerHTML = `<div class="gift-emoji">${gift.emoji || 'üéÅ'}</div>`;
            }
        } else if (animationPath.endsWith('.json')) {
            try {
                // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ lottie
                if (typeof lottie !== 'undefined') {
                    lottie.loadAnimation({
                        container: container,
                        renderer: 'svg',
                        loop: true,
                        autoplay: true,
                        path: animationPath
                    });
                } else {
                    console.error('Lottie –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
                    container.innerHTML = `<div class="gift-emoji">${gift.emoji || 'üéÅ'}</div>`;
                }
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ JSON –∞–Ω–∏–º–∞—Ü–∏–∏:', e);
                container.innerHTML = `<div class="gift-emoji">${gift.emoji || 'üéÅ'}</div>`;
            }
        } else {
            container.innerHTML = `<div class="gift-emoji">${gift.emoji || 'üéÅ'}</div>`;
        }
    } else {
        // –ï—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ—Ç, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —ç–º–æ–¥–∑–∏
        container.innerHTML = `<div class="gift-emoji">${gift.emoji || 'üéÅ'}</div>`;
    }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞
 * @param {Object} gift - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–¥–∞—Ä–∫–∞
 * @param {Function} closeModalFn - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 * @param {Function} updateUiFn - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 * @param {HTMLElement} buttonElement - –ö–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞
 */
export function handleExclusiveGiftReceive(gift, closeModalFn, updateUiFn, buttonElement) {
    showConfirmDialog({
        hideTitle: true, // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        message: `${gift.emoji || 'üéÅ'} ${i18n.t('gifts.exclusive_gift_manual_message')}`,
        confirmText: 'OK',
        cancelText: i18n.t('common.cancel'),
        simpleLayout: true, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –º–∞–∫–µ—Ç —Å –û–ö —Å–ø—Ä–∞–≤–∞ –∏ —Ç–µ–º–Ω–æ–π –û—Ç–º–µ–Ω–∞ —Å–ª–µ–≤–∞
        onConfirm: async () => {
            try {
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—Ä–∞–∑—É
                if (typeof closeModalFn === 'function') {
                    closeModalFn();
                }
                
                // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É, –Ω–æ –Ω–µ –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
                buttonElement.disabled = true;
                
                // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const tg = window.Telegram.WebApp;
                const userId = tg.initDataUnsafe?.user?.id;
                const firstName = tg.initDataUnsafe?.user?.first_name || '';
                const username = tg.initDataUnsafe?.user?.username || '';
                
                if (!userId) {
                    showError(i18n.t('errors.failed_to_get_user_id'));
                    buttonElement.disabled = false;
                    return;
                }
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
                const requestData = {
                    user_id: userId,
                    gift_id: gift.gift_id || gift.id,
                    exclusive_request: true, // –§–ª–∞–≥ –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞
                    user_info: {
                        first_name: firstName,
                        username: username
                    }
                };
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å ugift_id, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∑–∞–ø—Ä–æ—Å
                if (gift.ugift_id) {
                    requestData.ugift_id = gift.ugift_id;
                }
                
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∏–ø —Å—Ç–∞–≤–∫–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ gift
                const betSource = gift.bet_amount || localStorage.getItem('selectedBetType') || 'low';
                requestData.bet_amount = betSource;
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                const isDevMode = window.isDevMode || window.location.pathname.includes('/dev/');
                const apiPrefix = isDevMode ? '/dev' : '';
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞
                const response = await fetch(`${apiPrefix}/api/send_gift`, {
                    method: 'POST',
                    headers: createTelegramHeaders(),
                    body: JSON.stringify({
                        ...requestData,
                        initData: getTelegramInitData() // –î–æ–±–∞–≤–ª—è–µ–º initData –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ username –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏
                    if (!username) {
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ username
                        showUsernameRequiredDialog(() => {
                            console.log('–î–∏–∞–ª–æ–≥ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ username –∑–∞–∫—Ä—ã—Ç');
                            
                            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –ü–û–°–õ–ï –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞ username
                            showSuccess(i18n.t('gifts.request_sent_success'));
                            
                            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                            if (typeof updateUiFn === 'function') {
                                updateUiFn();
                            }
                        });
                        
                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±–æ—Ç –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ username
                        fetch(`${apiPrefix}/api/send_gift`, {
                            method: 'POST',
                            headers: createTelegramHeaders(),
                            body: JSON.stringify({
                                user_id: userId,
                                username_required_notification: true,
                                gift_id: gift.gift_id || gift.id,
                                initData: getTelegramInitData() // –î–æ–±–∞–≤–ª—è–µ–º initData –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                            })
                        }).catch(error => {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ username:', error);
                        });
                    } else {
                        // –ï—Å–ª–∏ username –µ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏
                        showSuccess(i18n.t('gifts.request_sent_success'));
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                        if (typeof updateUiFn === 'function') {
                            updateUiFn();
                        }
                    }
                } else {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞
                    if (result.error_key === 'daily_limit_reached' || (result.error && result.error.includes('daily_limit_reached'))) {
                        showDailyLimitReached(result.reset_time_str);
                    } else {
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
                        showError(result.error || i18n.t('errors.failed_to_send_request'));
                        
                        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                        buttonElement.disabled = false;
                    }
                }
            } catch (error) {
                // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏:', error);
                showError(i18n.t('errors.request_error'));
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                buttonElement.disabled = false;
            }
        },
        onCancel: () => {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ, –ù–ï –∑–∞–∫—Ä—ã–≤–∞—è –æ—Å–Ω–æ–≤–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            buttonElement.disabled = false;
            console.log('–û—Ç–º–µ–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–Ω–æ–ø–∫–∏ —Å–≤–æ–π—Å—Ç–≤–æ __isSending
            // –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ, —á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è
            if (buttonElement) {
                // –ò—â–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å isSending
                let parent = buttonElement.parentNode;
                while (parent) {
                    if (parent.querySelector && parent.querySelector('#receiveModalGift')) {
                        const receiveButton = parent.querySelector('#receiveModalGift');
                        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–æ —á–µ—Ä–µ–∑ dataset –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–∫–∏
                        receiveButton.dataset.isSending = 'false';
                        break;
                    }
                    parent = parent.parentNode;
                }
            }
        }
    });
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞
 * @param {Object} gift - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–¥–∞—Ä–∫–∞
 * @param {Function} closeModalFn - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 * @param {Function} updateUiFn - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 * @param {Function} sellGiftFn - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –ø–æ–¥–∞—Ä–∫–∞
 * @param {HTMLElement} buttonElement - –ö–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞
 */
export function handleRegularGiftReceive(gift, closeModalFn, updateUiFn, sellGiftFn, buttonElement) {
    const giftValue = gift.star_count || gift.value || 0;
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–∞–∂–∏ —Å –∏–∫–æ–Ω–∫–æ–π –∫—Ä–∏—Å—Ç–∞–ª–ª–∞
    const sellButtonText = createSellButtonText(i18n.t('gifts.sell_for'), formatGiftPrice(giftValue));
    
    showConfirmDialog({
        hideTitle: true, // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        message: `${gift.emoji || 'üéÅ'} ${i18n.t('gifts.send_to_self_warning')}`,
        confirmText: 'OK',
        cancelText: i18n.t('common.cancel'),
        simpleLayout: true, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –º–∞–∫–µ—Ç —Å –û–ö —Å–ø—Ä–∞–≤–∞ –∏ —Ç–µ–º–Ω–æ–π –û—Ç–º–µ–Ω–∞ —Å–ª–µ–≤–∞
        reverseButtons: true, // –ú–µ–Ω—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ–∫–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞
        onConfirm: async () => {
            try {
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—Ä–∞–∑—É
                if (typeof closeModalFn === 'function') {
                    closeModalFn();
                }
                
                // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É, –Ω–æ –Ω–µ –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
                buttonElement.disabled = true;
                
                // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp
                const tg = window.Telegram.WebApp;
                const userId = tg.initDataUnsafe?.user?.id;
                
                if (!userId) {
                    showError(i18n.t('errors.failed_to_get_user_id'));
                    buttonElement.disabled = false;
                    return;
                }
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
                const requestData = {
                    user_id: userId,
                    gift_id: gift.gift_id || gift.id,
                };
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å ugift_id, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∑–∞–ø—Ä–æ—Å
                if (gift.ugift_id) {
                    requestData.ugift_id = gift.ugift_id;
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                const isDevMode = window.isDevMode || window.location.pathname.includes('/dev/');
                const apiPrefix = isDevMode ? '/dev' : '';
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞
                const response = await fetch(`${apiPrefix}/api/send_gift`, {
                    method: 'POST',
                    headers: createTelegramHeaders(),
                    body: JSON.stringify({
                        ...requestData,
                        initData: getTelegramInitData() // –î–æ–±–∞–≤–ª—è–µ–º initData –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
                    showSuccess('‚úÖ ' + result.message);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    if (typeof updateUiFn === 'function') {
                        updateUiFn();
                    }
                } else {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞
                    if (result.error_key === 'daily_limit_reached' || (result.error && result.error.includes('daily_limit_reached'))) {
                        showDailyLimitReached(result.reset_time_str);
                    } else {
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
                        showError(result.error || i18n.t('errors.failed_to_send_gift'));
                        
                        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                        buttonElement.disabled = false;
                    }
                }
            } catch (error) {
                // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–¥–∞—Ä–∫–∞:', error);
                showError(i18n.t('errors.gift_send_error'));
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                buttonElement.disabled = false;
            }
        },
        onCancel: () => {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ, –ù–ï –∑–∞–∫—Ä—ã–≤–∞—è –æ—Å–Ω–æ–≤–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            buttonElement.disabled = false;
            console.log('–û—Ç–º–µ–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–Ω–æ–ø–∫–∏ —Å–≤–æ–π—Å—Ç–≤–æ __isSending
            // –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ, —á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è
            if (buttonElement) {
                // –ò—â–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å isSending
                let parent = buttonElement.parentNode;
                while (parent) {
                    if (parent.querySelector && parent.querySelector('#receiveModalGift')) {
                        const receiveButton = parent.querySelector('#receiveModalGift');
                        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–æ —á–µ—Ä–µ–∑ dataset –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–∫–∏
                        receiveButton.dataset.isSending = 'false';
                        break;
                    }
                    parent = parent.parentNode;
                }
            }
        }
    });
} 